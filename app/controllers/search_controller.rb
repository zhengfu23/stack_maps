#
# app/controllers/stacks_controller.rb
#
# API controller to handle search
#
# Stub generated by Swagger-codegen
#
# Copyright (c) 2017 Ke Qian
#

class SearchController < ApplicationController
  include ApplicationControllerConcern

  def index
    re = /([A-Z]{1,3})(\d+(?:\.[A-Z]*\d+)*)\s+([^+]*)([+]*)/
    callno_dec = re.match(params[:keyword].strip.upcase)
    if !callno_dec || callno_dec.length < 5
      render json: { error: 'bad request', code: 400, message: 'cannot parse call number' }, status: 400
      return
    end
    oversize = callno_dec[4].length
    rules = []
    Rule.find_each do |rule|
      rules << rule if rule.call_number == callno_dec[0]
    end

    if !rules.empty?
      ret = []
      rules.each do |rule|
        ret << {
          result_type: rule.rule_type,
          result_id: rule.rule_id,
          result: [rule.call_number, rule.rule].join(', ')
        }
      end
      render json: ret
    else
      render json: classSearch(callno_dec[1], callno_dec[2].split('.')[0], callno_dec[2].split('.')[1], oversize)
    end
  end

  def classSearch(c_in, sc_in, sc2_in, oversize)
    ret = []
    sc_in = sc_in ? sc_in.to_i : 0
    sc2_in ||= ''

    Stack.find_each do |stack|
      sc = stack.start_class || 'A'
      ec = stack.end_class || 'ZZZZ'
      ssc = stack.start_subclass || 0
      esc = stack.end_subclass || 2_147_483_647
      ssc2 = stack.start_subclass2 || '' # could be blank
      esc2 = stack.end_subclass2 || 'ZZZZ' # could be blank

      if stack.oversize == oversize &&
         (sc < c_in ||
         (sc == c_in && ssc < sc_in) ||
         (sc == c_in && ssc == sc_in && ssc2 <= sc2_in)) &&
         (ec > c_in ||
         (ec == c_in && esc > sc_in) ||
         (ec == c_in && esc == sc_in && esc2 >= sc2_in))
        ret << {
          result_type: 'Stack',
          result_id: stack.id,
          result: getStackById(stack.id)
        }
      end
    end
    ret
  end
end
